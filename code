import os
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.feature_selection import RFE
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from scipy.cluster.hierarchy import dendrogram, linkage, fcluster
from sklearn.metrics import silhouette_score
import itertools
import matplotlib.pyplot as plt
import seaborn as sns

# Définition du répertoire de travail
os.chdir('/Users/mathisbouvet/Documents/Stage/Données/Analyse factorielle/Activité physique')

# Chargement des données
APH = pd.read_csv('ActivitéPhysiqueHomme.csv', sep=";", header=0)

# Conversion des données en facteurs
APH = APH.apply(lambda x: x.astype('category'))

# Sélection des deux variables retenues
d = APH[['FH', 'HTMETI', 'HTPP']]

# Classification ascendante hiérarchique avec la distance de Gower
scaler = StandardScaler()
d_scaled = scaler.fit_transform(d)

md_gower = linkage(d_scaled, method='ward')
plt.figure(figsize=(10, 6))
dendrogram(md_gower)
plt.title("Dendrogramme (distance de Gower)")
plt.show()

# Affichage du dendrogramme découpé en 4 classes
plt.title("Dendrogramme découpé en 4 classes (distance de Gowver)")
plt.show()

# Calcul de l'inertie
# Non disponible en Python directement, vous pouvez essayer de rechercher une alternative dans une autre bibliothèque ou implémenter une fonction personnalisée.

# Résultat pour la distance de Gower
APH['typo_gower_3classes'] = fcluster(md_gower, 4, criterion='maxclust')
print(APH.groupby('typo_gower_3classes').describe())
